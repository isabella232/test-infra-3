#!/usr/bin/env bash
# Copyright 2016 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail

# get test-infra for latest bootstrap etc
git clone https://github.com/jetstack/test-infra


# Check if the job has opted-in to bazel remote caching and if so generate 
# .bazelrc entries pointing to the remote cache
export BAZEL_REMOTE_CACHE_ENABLED=${BAZEL_REMOTE_CACHE_ENABLED:-false}
if [[ "${BAZEL_REMOTE_CACHE_ENABLED}" == "true" ]]; then
    echo "Bazel remote cache is enabled, generating .bazelrcs ..."
    ./test-infra/images/bootstrap/create_bazel_cache_rcs.sh
fi


# runs custom docker data root cleanup binary and debugs remaining resources
# cleanup_dind() {
#     barnacle || true
#     # list what images and volumes remain
#     echo "Remaining docker images and volumes are:"
#     docker images --all || true
#     docker volume ls || true
# }

# disable error exit so we can run post-command cleanup
set +o errexit
# actually start bootstrap and the job
./test-infra/jenkins/bootstrap.py \
    --job=${JOB_NAME} \
    --service-account=${GOOGLE_APPLICATION_CREDENTIALS} \
    --upload='gs://jetstack-logs/pr-logs' \
    "$@"
EXIT_VALUE=$?

# cleanup after job
# if [[ "${DOCKER_IN_DOCKER_ENABLED}" == "true" ]]; then
#     echo "Cleaning up after docker in docker."
#     printf '=%.0s' {1..80}; echo
#     cleanup_dind
#     printf '=%.0s' {1..80}; echo
#     echo "Done cleaning up after docker in docker."
# fi

# preserve exit value from job / bootstrap
exit ${EXIT_VALUE}
