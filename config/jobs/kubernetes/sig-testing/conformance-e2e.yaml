presubmits:
  kubernetes/kubernetes:
  # conformance test against kubernetes master branch with `kind`, skipping
  # serial tests so it runs in ~20m
  - name: pull-kubernetes-conformance-image-test
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    always_run: false
    optional: true
    spec:
      containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20190220-615bdbe2e-master
          env:
            # skip serial tests and run with --ginkgo-parallel
            - name: "PARALLEL"
              value: "true"
          args:
            - "--job=$(JOB_NAME)"
            - "--root=/go/src"
            - "--repo=k8s.io/test-infra=master"
            - "--repo=k8s.io/kubernetes=$(PULL_REFS)"
            - "--repo=sigs.k8s.io/kind=master"
            - "--service-account=/etc/service-account/service-account.json"
            - "--upload=gs://kubernetes-jenkins/pr-logs"
            - "--scenario=execute"
            - "--"
            # the script must run from kubernetes, but we're checking out kind
            - "bash"
            - "--"
            - "-c"
            - "cd ./../../k8s.io/kubernetes && source ./../test-infra/experiment/kind-conformance-e2e.sh"
          # we need privileged mode in order to do docker in docker
          securityContext:
            privileged: true
          # kind needs /lib/modules and cgroups from the host
          volumeMounts:
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - mountPath: /sys/fs/cgroup
              name: cgroup
          resources:
            requests:
              # these are both a bit below peak usage during build
              # this is mostly for building kubernetes
              memory: "9000Mi"
              # during the tests more like 3-20m is used
              cpu: 2000m
      volumes:
        - name: modules
          hostPath:
            path: /lib/modules
            type: Directory
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: Directory
      # trialing this on kind jobs, we are using FQDN for in-cluster services, now
      # so use ndots 1 to improve dns performance
      # TODO(bentheelder): consider setting this at the cluster level instead
      dnsConfig:
        options:
          - name: ndots
            value: "1"
