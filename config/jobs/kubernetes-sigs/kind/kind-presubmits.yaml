# sigs.k8s.io/kind presubmits
presubmits:
  kubernetes-sigs/kind:
  - name: pull-kind-build
    decorate: true
    path_alias: sigs.k8s.io/kind
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190301-76bc03340-master
        command:
        - "./hack/ci/build-all.sh"
  - name: pull-kind-verify
    decorate: true
    path_alias: sigs.k8s.io/kind
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190301-76bc03340-experimental
        command:
        - "./hack/verify-all.sh"
        env:
        # skip dep verification in the main CI job, use verify-deps for that
        - name: VERIFY_DEPS
          value: "false"
  - name: pull-kind-verify-deps
    decorate: true
    path_alias: sigs.k8s.io/kind
    run_if_changed: ^(go\.mod)|(go\.sum)|(vendor/.*)$
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190301-76bc03340-experimental
        command:
        - "./hack/verify-deps.sh"
  # conformance test against kubernetes master branch with `kind`, skipping
  # serial tests so it runs in ~20m
  - name: pull-kind-conformance-parallel
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190301-76bc03340-master
        env:
        # skip serial tests and run with --ginkgo-parallel
        - name: "PARALLEL"
          value: "true"
        args:
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=sigs.k8s.io/kind=$(PULL_REFS)"
        - "--repo=k8s.io/kubernetes=master"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=execute"
        - "--"
        # the script must run from kubernetes, but we're checking out kind
        - "bash"
        - "--"
        - "-c"
        - "cd ./../../k8s.io/kubernetes && ./../../sigs.k8s.io/kind/hack/ci/e2e.sh"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        # kind needs /lib/modules and cgroups from the host
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        resources:
          requests:
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
  # conformance test against kubernetes release-1.13 branch with `kind`, skipping
  # serial tests so it runs in ~20m
  - name: pull-kind-conformance-parallel-1-13
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190301-76bc03340-1.13
        env:
        # skip serial tests and run with --ginkgo-parallel
        - name: "PARALLEL"
          value: "true"
        args:
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=sigs.k8s.io/kind=$(PULL_REFS)"
        - "--repo=k8s.io/kubernetes=release-1.12"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=execute"
        - "--"
        # the script must run from kubernetes, but we're checking out kind
        - "bash"
        - "--"
        - "-c"
        - "cd ./../../k8s.io/kubernetes && ./../../sigs.k8s.io/kind/hack/ci/e2e.sh"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        # kind needs /lib/modules and cgroups from the host
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        resources:
          requests:
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
  # conformance test against kubernetes release-1.12 branch with `kind`, skipping
  # serial tests so it runs in ~20m
  - name: pull-kind-conformance-parallel-1-12
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190301-76bc03340-1.12
        env:
        # skip serial tests and run with --ginkgo-parallel
        - name: "PARALLEL"
          value: "true"
        args:
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=sigs.k8s.io/kind=$(PULL_REFS)"
        - "--repo=k8s.io/kubernetes=release-1.12"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=execute"
        - "--"
        # the script must run from kubernetes, but we're checking out kind
        - "bash"
        - "--"
        - "-c"
        - "cd ./../../k8s.io/kubernetes && ./../../sigs.k8s.io/kind/hack/ci/e2e.sh"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        # kind needs /lib/modules and cgroups from the host
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        resources:
          requests:
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
  # conformance test against kubernetes release-1.11 branch with `kind`, skipping
  # serial tests so it runs in ~20m
  - name: pull-kind-conformance-parallel-1-11
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190301-76bc03340-1.11
        env:
        # skip serial tests and run with --ginkgo-parallel
        - name: "PARALLEL"
          value: "true"
        args:
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=sigs.k8s.io/kind=$(PULL_REFS)"
        - "--repo=k8s.io/kubernetes=release-1.11"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=execute"
        - "--"
        # the script must run from kubernetes, but we're checking out kind
        - "bash"
        - "--"
        - "-c"
        - "cd ./../../k8s.io/kubernetes && ./../../sigs.k8s.io/kind/hack/ci/e2e.sh"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        # kind needs /lib/modules and cgroups from the host
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        resources:
          requests:
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory